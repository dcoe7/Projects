//David Coe 
//EE178 Lab 2
//BCD Display
`timescale 1 ns / 1 ps  //simulation time / simulator time
//Verilog-2001 syntax.
module quad_seven_seg (
 input wire clk,
 input wire [3:0] val3,
 input wire [3:0] val2,
 input wire [3:0] val1,
 input wire [3:0] val0,
 output wire an3,
 output wire an2,
 output wire an1,
 output wire an0,
 output wire ca,
 output wire cb,
 output wire cc,
 output wire cd,
 output wire ce,
 output wire cf,
 output wire cg,
 output wire dp
  );
//clock divider (1)
reg [15:0]counter=0;
always@(posedge clk)
    begin
        if(counter==50000)counter<=0;
        else counter<=counter+1;
    end
//counter (2)
reg [1:0] step=0;    
always@(posedge clk)
    begin
        if(counter==50000)step<=step+1; //2'b
    end
//2:4 decoder (3)
assign{an3,an2,an1,an0}=~(4'b0001<<step);
//16:4 Mux (4)
wire [3:0] val;
assign val=step[1]?(step[0]?val3:val2):(step[0]?val1:val0);
//4:7 Decoder (5)
reg [7:0]digit;
assign{ca,cb,cc,cd,ce,cf,cg}=digit;
always@*
    begin
        case(val)
            0:digit=~(7'b1111110);
            1:digit=~(7'b0110000);
            2:digit=~(7'b1101101);
            3:digit=~(7'b1111001);
            4:digit=~(7'b0110011);
            5:digit=~(7'b1011011);
            6:digit=~(7'b1011111);
            7:digit=~(7'b1110000);
            8:digit=~(7'b1111111);
            9:digit=~(7'b1110011);
            10:digit=~(7'b1110111);//A
            11:digit=~(7'b0011111);//B
            12:digit=~(7'b1001110);//C
            13:digit=~(7'b0111101);//D
            14:digit=~(7'b1001111);//E
            15:digit=~(7'b1000111);//F
        default:digit=(7'b1111110);
        endcase
    end           
 assign dp = 1'b1; //deactivate dp to active low
 /*
 Circuit Description:
 1 - Modulo N Counter: Reduce 100MHz clock to 2kHz
 2 - 4 Step Counter: Cycle through 4 digits on quad BCD
 3 - 2:4 Decoder: Illuminate BCD digits with active low
 4 - 16:4 Mux: Take 16bit switch input
 5 - 4:7 Decoder: Choose character for BCD 
 */
endmodule
